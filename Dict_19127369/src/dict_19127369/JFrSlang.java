/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dict_19127369;

import java.util.*;
import java.io.*;
import javax.swing.JOptionPane;
/**
 *
 * @author lemin
 */
public class JFrSlang extends javax.swing.JFrame {
    public static final SlangWordList list = new SlangWordList();

    /**
     * Creates new form JFrSlang
     */
    
    public void initData() {
        FileProccess fh=new FileProccess();
        String data_path="slang.txt";
        fh.read(data_path, list);
    }

    public JFrSlang() {
        initData();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtSlang = new javax.swing.JTextField();
        btnFindSlang = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtShowMean = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        txtDefinition = new javax.swing.JTextField();
        btnFindDef = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtShowSlang = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtAddSlang = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtAddMean = new javax.swing.JTextArea();
        btnAdd = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnHistory = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtHistory = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel8.setFont(new java.awt.Font("Arial", 1, 26)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 204));
        jLabel8.setText("SLANG WORD DICTIONARY");
        jPanel2.add(jLabel8);

        jLabel2.setForeground(new java.awt.Color(153, 0, 0));
        jLabel2.setText("Search by slang word:");

        txtSlang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSlangActionPerformed(evt);
            }
        });

        btnFindSlang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Search.png"))); // NOI18N
        btnFindSlang.setText("FIND");
        btnFindSlang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindSlangActionPerformed(evt);
            }
        });

        txtShowMean.setColumns(20);
        txtShowMean.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtShowMean.setRows(5);
        jScrollPane1.setViewportView(txtShowMean);

        jLabel3.setForeground(new java.awt.Color(153, 0, 0));
        jLabel3.setText("Search by definition:");

        btnFindDef.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Search.png"))); // NOI18N
        btnFindDef.setText("FIND");
        btnFindDef.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindDefActionPerformed(evt);
            }
        });

        txtShowSlang.setColumns(20);
        txtShowSlang.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtShowSlang.setRows(5);
        jScrollPane2.setViewportView(txtShowSlang);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Add new slang word:");

        jLabel4.setText("Slang:");

        jLabel5.setText("Meaning:");

        txtAddMean.setColumns(20);
        txtAddMean.setRows(5);
        jScrollPane3.setViewportView(txtAddMean);

        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Add.png"))); // NOI18N
        btnAdd.setText("ADD");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Refresh.png"))); // NOI18N
        btnReset.setText("RESET");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnHistory.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Tick.png"))); // NOI18N
        btnHistory.setText("REFRESH HISTORY");

        txtHistory.setColumns(20);
        txtHistory.setRows(5);
        jScrollPane4.setViewportView(txtHistory);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDefinition, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFindDef, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSlang, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFindSlang))
                    .addComponent(jScrollPane2))
                .addGap(76, 76, 76)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(txtAddSlang, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnReset)))
                .addGap(78, 78, 78)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnHistory)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtSlang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFindSlang)
                    .addComponent(jLabel1)
                    .addComponent(btnHistory, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtDefinition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnFindDef))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtAddSlang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAdd))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnReset)))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 1357, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtSlangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSlangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSlangActionPerformed

    private void btnFindSlangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindSlangActionPerformed
        if(txtSlang.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "(!) Please enter a slang word to search.");
        }
        else {
            ArrayList<String> values = list.searchBySlangWord(txtSlang.getText());
            if(values == null) {
                txtShowMean.setText("MEANING: Not found!");
                txtShowMean.setEditable(false);
            }
            else {
                String def = "";
                for (int i = 0; i< values.size(); i++){
                    if(i != values.size() - 1){
                        def = def + values.get(i) + " | ";
                    }
                    else if (i == values.size() - 1){
                        def = def + values.get(i);
                    }
                }
                FileProccess.writeHistory("historySlang.txt", txtSlang.getText(), def);
                txtShowMean.setText("MEANING: " + def);
                txtShowMean.setEditable(false);
            }
        }
    }//GEN-LAST:event_btnFindSlangActionPerformed

    private void btnFindDefActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindDefActionPerformed
        if(txtDefinition.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "(!) Please enter a definition to search.");
        }
        else {
            if(list.searchByDefinition(txtDefinition.getText()) == null) {
                txtShowSlang.setText("NOT FOUND!");
            } else {
                txtShowSlang.setText("SLANG WORD: " + list.searchByDefinition(txtDefinition.getText()));
                txtShowSlang.setEditable(false);
            }
        }
    }//GEN-LAST:event_btnFindDefActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if(txtAddSlang.getText().isEmpty() || txtAddMean.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "(!) Slang word or meaning is empty. Please enter all the information to add.");
        }
        else {
            try {
                String newSlang = txtAddSlang.getText();
                String newDef = txtAddMean.getText();
                if(list.isExisted(newSlang)==false) {
                    list.addNewSlang(newSlang, newDef, 'a');
                    FileProccess.write("slang.txt", list);
                    JOptionPane.showMessageDialog(this, "(i) Add new slang word successful.");
                }
                else {
                    int choice=JOptionPane.showConfirmDialog(null, "This word is existed! Do you want to overwrite?",
                            "Confirm", JOptionPane.YES_NO_CANCEL_OPTION);
                    if(choice==JOptionPane.YES_OPTION) {
                        list.addNewSlang(newSlang, newDef, 'w');
                        FileProccess.write("slang.txt", list);
                        JOptionPane.showMessageDialog(this, "(i) Add new slang word successful.");
                    }
                    else if(choice==JOptionPane.NO_OPTION) {
                        list.addNewSlang(newSlang, newDef, 'n');
                        FileProccess.write("slang.txt", list);
                        JOptionPane.showMessageDialog(this, "(i) Add new slang word successful.");
                    }
                }
            }catch(Exception e) {
                JOptionPane.showMessageDialog(this, "(!} Error: " + e.toString());
            }
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        Object[] options = {"Confirm", "Cancel"};
        String mess = "(?) Are you sure you want to reset the dictionary?";
        
        int n = JOptionPane.showOptionDialog(this, mess, "Reset SlangWord", JOptionPane.YES_NO_CANCEL_OPTION,
                JOptionPane.QUESTION_MESSAGE, null, options, null);
        
        if(n == JOptionPane.YES_OPTION){
            try {
                FileProccess.read("original_slang.txt", list);
                FileProccess.write("slang.txt", list);
                JOptionPane.showMessageDialog(this, "(i) Reset successful.");
            } catch(Exception e) {
                JOptionPane.showMessageDialog(this, "(!} Error: " + e.toString());
            }
        }
    }//GEN-LAST:event_btnResetActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrSlang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrSlang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrSlang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrSlang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrSlang().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnFindDef;
    private javax.swing.JButton btnFindSlang;
    private javax.swing.JButton btnHistory;
    private javax.swing.JButton btnReset;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea txtAddMean;
    private javax.swing.JTextField txtAddSlang;
    private javax.swing.JTextField txtDefinition;
    private javax.swing.JTextArea txtHistory;
    private javax.swing.JTextArea txtShowMean;
    private javax.swing.JTextArea txtShowSlang;
    private javax.swing.JTextField txtSlang;
    // End of variables declaration//GEN-END:variables
}
